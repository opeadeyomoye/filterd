 steps:
 # try pulling cached image if exists
 - name: 'gcr.io/cloud-builders/docker'
   entrypoint: 'bash'
   args:
   - '-c'
   - 'docker pull gcr.io/$PROJECT_ID/$_IMAGE:latest || exit 0'

 # build the container image, using cached image if available
 - id: build-container-image
   name: 'gcr.io/cloud-builders/docker'
   args: ['build', '-t', 'gcr.io/$PROJECT_ID/$_IMAGE:$COMMIT_SHA', '--cache-from', 'gcr.io/$PROJECT_ID/$_IMAGE:latest', '.']

 # push the container image to Container Registry
 # pushes to both the $COMMIT_SHA tag and the "latest" tag for caching
 - id: push-image-to-registry
   name: 'gcr.io/cloud-builders/docker'
   entrypoint: 'bash'
   args:
    - '-c'
    - |
      docker tag gcr.io/$PROJECT_ID/$_IMAGE:$COMMIT_SHA gcr.io/$PROJECT_ID/$_IMAGE:latest &&
      docker push gcr.io/$PROJECT_ID/$_IMAGE:$COMMIT_SHA &&
      docker push gcr.io/$PROJECT_ID/$_IMAGE:latest

 # Deploy container image to Cloud Run
 - id: deploy-to-cloud-run
   name: 'gcr.io/cloud-builders/gcloud'
   args:
   - 'run'
   - 'deploy'
   - '$_CLOUD_RUN_SERVICE'
   - '--image'
   - 'gcr.io/$PROJECT_ID/$_IMAGE:$COMMIT_SHA'
   - '--region'
   - '$_REGION'
   - '--platform'
   - 'managed'
   - '--port'
   - '80'
   - '--allow-unauthenticated'
 substitutions:
   _CLOUD_RUN_SERVICE: 'filterd'
   _IMAGE: 'filterd'
   _REGION: 'europe-west1'
 images:
 - 'gcr.io/$PROJECT_ID/$_IMAGE:$COMMIT_SHA'
 - 'gcr.io/$PROJECT_ID/$_IMAGE:latest'
